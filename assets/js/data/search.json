[ { "title": "Unveiling the Construction of This Blog", "url": "/technical-writing/2022/04/12/construction-of-this-blog.html", "categories": "technical-writing", "tags": "technical-writing, blog", "date": "2022-04-12 22:02:21 +0200", "snippet": "When seeking information, we typically turn to the internet and utilize specific keywords for our search. While numerous blog posts are available, a significant portion of them reiterate the same i...", "content": "When seeking information, we typically turn to the internet and utilize specific keywords for our search. While numerous blog posts are available, a significant portion of them reiterate the same information redundantly. Consequently, when I contemplated creating my own posts, I hesitated to contribute yet another to the pool. Nonetheless, I recognized the value of having a repository to store and easily revisit the knowledge I acquire. Furthermore, by sharing it, others in need of similar information can also reap the benefits. I trust that you’ll discover something valuable within these articles.In this post, I’ll explain how I made my blog and added information to it. I’ve experimented with various tools before, such as Hugo, Jekyll, and Gridsome. Eventually, I settled on Jekyll because I came across a fantastic Jekyll theme called “Chirpy” in the theme gallery. This theme is minimal, responsive, and packed with features specifically designed for technical writing. Also the project is actively maintained. Now, let’s delve into the process of installing Jekyll and configuring the Chirpy theme.Install PrerequisitesJekyll is a Ruby Gem that can be installed on most systems. so you will have to install ruby and some prerequisites apps. This can be done by running the command:sudo apt-get install ruby-full build-essential zlib1g-devAdd ENV variablesThe following commands will add environment variables to your ~/.bashrc file to configure the gem installation path.echo '# Install Ruby Gems to ~/gems' &gt;&gt; ~/.bashrcecho 'export GEM_HOME=\"$HOME/gems\"' &gt;&gt; ~/.bashrcecho 'export PATH=\"$HOME/gems/bin:$PATH\"' &gt;&gt; ~/.bashrcsource ~/.bashrcInstall Jekyll and bundlerInstall Jekyll and Bundler using the below command.gem install jekyll bundlerCreating a New SiteSign in to GitHub and browse to Chirpy Starter, click the button Use this template &gt; Create a new repository, and name the new repository USERNAME.github.io, where USERNAME represents your GitHub username. While some suggest creating a public repository as USERNAME.github.io, it’s wise to keep the configuration private and copy only the build output’s contents to the public repository. This ensures you share only what you intend.Installing DependenciesBefore running local server for the first time, go to the root directory of your site and runbundleUpdate ConfigurationUpdate the variables of _config.yml as needed. The file can be found at the root of the repository.Create new postsFor Jekyll to render correctly, the file names must be in certain format and the conent should include some metadata. I use the below script for creating new posts which will create a new file based on user inputs. Later you can edit the new file add your content to it.#!/bin/bash# Get current date, year, and monthDATE=$(date +\"%Y-%m-%d\")YEAR=$(date +\"%Y\")MONTH=$(date +\"%m\")DATEFORPOST=$(date -u '+%Y-%m-%d %H:%M:%S %z')# Get title from user inputecho \"Enter the post title:\"read TITLE# Generate slug from titleSLUG=$(echo \"$TITLE\" | tr '[:upper:]' '[:lower:]' | tr -d '[:punct:]' | tr -s ' ' '-' | sed -e 's/^-//' -e 's/-$//' | cut -c 1-30)# Create year and month directories if they don't existmkdir -p _posts/$YEAR/$MONTH# Create the file with YAML frontmattercat &gt; _posts/$YEAR/$MONTH/$DATE-$SLUG.md &lt;&lt;EOL---title: \"$TITLE\"date: $DATEFORPOSTcategories:- technical-writingtags:- azure- kuberneteskeywords:description: \"\"---EOLRunning Local ServerYou may want to preview the site contents before publishing, so just runbundle exec jekyll sAfter a few seconds, the local service will be published at http://127.0.0.1:4000.Build and DeployGo to the root of the source project, and build your site as follows:JEKYLL_ENV=production bundle exec jekyll bUnless you specified the output path, the generated site files will be placed in folder _site of the project’s root directory. Now you should upload those files to the target server. Commit the changes and push to the github repository.If you prefer to keep your configuration and shareable content separate, then copy the contents of the _site folder to a separate repository named USERNAME.github.io. Although GitHub free accounts require USERNAME.github.io to be public, you can still maintain the configuration repository as private.Create a Github pages SiteGithub has it well documented here at this link. Follow the instructions and publish your siteConfigure Custom DomainIf you would like to add a custom domain, you can do so by following the steps from hereBookmarksChirpy Starter GuideAnother site using Chirpy theme" } ]
